type Attendees @model @auth(rules: [{allow: private}]) {
  id: ID!
  attendeeName: String
  attendeeAge: Int
  attendeeDOB: AWSDate
  attendeeGender: String
  attendeeEmail: AWSEmail
  attendeePhone: AWSPhone
  attendeeStreetAddress: String
  attendeeCity: String
  attendeeState: String
  attendeeZipCode: String
  attendeeCountry: String
  attendeeCompanyName: String
  attendeeJobTitle: String
  attendeeCompanySize: String
  attendeeReferral: String
  attendeeQuestions: String
  Events: [Events] @manyToMany(relationName: "AttendeesEvents")
}

type Events @model @auth(rules: [{allow: owner}]) {
  id: ID!
  eventTitle: String
  eventType: String
  eventCategory: String
  eventStartDate: AWSDate
  eventStartTime: AWSTime
  eventDesc: String
  eventAgenda: String
  eventSpeakers: String
  eventEndDate: AWSDate
  eventEndTime: AWSTime
  eventTimeZone: String
  eventVenueName: String
  eventCountry: String
  eventStreetAddress: String
  eventCity: String
  eventState: String
  eventZipCode: Int
  eventTicketQuantity: Int
  eventTicketCurrency: String
  eventTicketPrice: Float
  eventTicketSaleStart: AWSDateTime
  eventTicketSaleEnd: AWSDateTime
  promoLinkedin: String
  promoTwitter: AWSURL
  promoFacebook: AWSURL
  promoInstagram: AWSURL
  promoDiscord: AWSURL
  promoDiscountType: String
  promoDiscountAmount: Float
  promoDiscountCode: String
  promoDiscountExpiration: AWSDateTime
  orgName: String
  orgEmail: AWSEmail
  orgPhone: AWSPhone
  orgWebsite: AWSURL
  eventCodeofConduct: String
  eventLogo: String
  eventImage: String
  eventVirtualURL: AWSURL
  eventCreatorName: String
  eventCreatorImage: String
  eventCreatorBio: String
  eventCreatorHeadline: String
  owner: String
  attendeess: [Attendees] @manyToMany(relationName: "AttendeesEvents")
}
 